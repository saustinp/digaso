Timestep :  1
DIRK stage :  1
Elapsed time is 8.997845 seconds.
Newton iteration :  1
Old residual: 3.612082e+00,   New residual: 2.240781e-03    1.000000e+00
Newton iteration :  2
Old residual: 2.240781e-03,   New residual: 2.420526e-10    1.000000e+00
DIRK stage :  2
Elapsed time is 8.550364 seconds.
Newton iteration :  1
Old residual: 4.139610e+00,   New residual: 3.858673e-03    1.000000e+00
Newton iteration :  2
{Operation terminated by user during <a href="matlab:matlab.internal.language.introspective.errorDocCallback('source2d')" style="font-weight:bold">source2d</a>


In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('volint', '/Users/saustin/Dropbox (MIT)/DIGASOV2/kernel/volint.m', 82)" style="font-weight:bold">volint</a> (<a href="matlab: opentoline('/Users/saustin/Dropbox (MIT)/DIGASOV2/kernel/volint.m',82,0)">line 82</a>)
    [s, s_udg] = source( pg, udgg, arg, time);

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('hdg_elemental', '/Users/saustin/Dropbox (MIT)/DIGASOV2/kernel/hdg_elemental.m', 50)" style="font-weight:bold">hdg_elemental</a> (<a href="matlab: opentoline('/Users/saustin/Dropbox (MIT)/DIGASOV2/kernel/hdg_elemental.m',50,0)">line 50</a>)
        [Ru, Rq, BD, M, C, L, Q, Ju, Jq, wrl] = volint(master,app,dgnodes(:,id,:),UDG(:,id,:),SH(:,id,:));

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('hdg_assemble', '/Users/saustin/Dropbox (MIT)/DIGASOV2/kernel/hdg_assemble.m', 41)" style="font-weight:bold">hdg_assemble</a> (<a href="matlab: opentoline('/Users/saustin/Dropbox (MIT)/DIGASOV2/kernel/hdg_assemble.m',41,0)">line 41</a>)
    [ae{i},fe{i},dudg{i},dudg_duh{i}] = hdg_elemental(masterp{i},appp{i},dgnodes{i},bf{i},udg{i},uh{i},sh{i});

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('hdg_solve', '/Users/saustin/Dropbox (MIT)/DIGASOV2/kernel/hdg_solve.m', 247)" style="font-weight:bold">hdg_solve</a> (<a href="matlab: opentoline('/Users/saustin/Dropbox (MIT)/DIGASOV2/kernel/hdg_solve.m',247,0)">line 247</a>)
        [K,F,DUDG,DUDG_DUH] = hdg_assemble(master,mesh,app,UDG,UH,SH);

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('hdg_solve_dirk', '/Users/saustin/Dropbox (MIT)/DIGASOV2/kernel/hdg_solve_dirk.m', 91)" style="font-weight:bold">hdg_solve_dirk</a> (<a href="matlab: opentoline('/Users/saustin/Dropbox (MIT)/DIGASOV2/kernel/hdg_solve_dirk.m',91,0)">line 91</a>)
        [UDGn,UHn] = hdg_solve(master,mesh,app,UDG,UH,SDG);

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('app_electrondensity', '/Users/saustin/Dropbox (MIT)/DIGASOV2/problem/streamer/discharge_model/app_electrondensity.m', 120)" style="font-weight:bold">app_electrondensity</a> (<a href="matlab: opentoline('/Users/saustin/Dropbox (MIT)/DIGASOV2/problem/streamer/discharge_model/app_electrondensity.m',120,0)">line 120</a>)
    [UDG,UH] = hdg_solve_dirk(master,mesh,app,UDG,UH,[],time,dt(itime+itime_restart),nstage,torder,linearmesh);
} 
writeccode
writeccode
app_electrondensity_digaso
Make t2f...
Create elcon...
app_electrondensity_digaso
Make t2f...
Create elcon...
load('time178.mat')
scaplot(mesh,UDG(:,1,:),[],0,0); axis equal; axis tight; colormap jet; title('|E|');
[Warning: A callback recursively calls CLOSE.  Use DELETE to prevent this message.] 
[> In close
In close
In close
In close
In close] 
app_electrondensity_digaso
Make t2f...
Create elcon...
Create domain decomposition...
******************************************************************************
METIS 5.0 Copyright 1998-13, Regents of the University of Minnesota
 (HEAD: , Built on: Dec 22 2013, 00:32:45)
 size of idx_t: 32bits, real_t: 32bits, idx_t *: 64bits

Mesh Information ------------------------------------------------------------
 Name: temp.txt, #Elements: 16139, #Nodes: 24379, #Parts: 4

Options ---------------------------------------------------------------------
 ptype=kway, objtype=cut, ctype=shem, rtype=greedy, iptype=metisrb
 dbglvl=0, ufactor=1.030, minconn=NO, contig=NO, nooutput=NO
 seed=-1, niter=10, ncuts=1
 gtype=dual, ncommon=1, niter=10, ncuts=1

Direct k-way Partitioning ---------------------------------------------------
 - Edgecut: 174.


Timing Information ----------------------------------------------------------
  I/O:          		   0.007 sec
  Partitioning: 		   0.009 sec   (METIS time)
  Reporting:    		   0.000 sec

Memory Information ----------------------------------------------------------
  Max memory used:		   1.599 MB
******************************************************************************
Do HDG partition...
open getsolfrombinaryfile.m
sprintf("%4d",4)

ans = 

    "   4"

sprintf("%04d",4)

ans = 

    "0004"

sprintf("%04d",40)

ans = 

    "0040"

digaso_data_analysis
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('fopen')" style="font-weight:bold">fopen</a>
First input must be a file name or a file identifier.

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('getsolfrombinaryfile', '/Users/saustin/Dropbox (MIT)/DIGASOV2/postprocessing/getsolfrombinaryfile.m', 53)" style="font-weight:bold">getsolfrombinaryfile</a> (<a href="matlab: opentoline('/Users/saustin/Dropbox (MIT)/DIGASOV2/postprocessing/getsolfrombinaryfile.m',53,0)">line 53</a>)
        fileID = fopen([filename + sprintf("%04d",time) + '_np' num2str(i-1) '.bin'],'r');

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('digaso_data_analysis', '/Users/saustin/Dropbox (MIT)/DIGASOV2/problem/streamer/discharge_model/digaso_data_analysis.m', 11)" style="font-weight:bold">digaso_data_analysis</a> (<a href="matlab: opentoline('/Users/saustin/Dropbox (MIT)/DIGASOV2/problem/streamer/discharge_model/digaso_data_analysis.m',11,0)">line 11</a>)
[UDG,UH] = getsolfrombinaryfile('./run020824/time',nproc,npv,nc,npf,nch,hybrid, itime);
} 
digaso_data_analysis

str = 

  1×3 <a href="matlab:helpPopup string" style="font-weight:bold">string</a> array

    "./run020824/time0000_np"    "0"    ".bin"

if system_dependent('IsDebugMode')==1, dbquit all; end
digaso_data_analysis

str = 

  1×3 <a href="matlab:helpPopup string" style="font-weight:bold">string</a> array

    "./run020824/time0000_np"    "0"    ".bin"

fileID = fopen([filename  sprintf("%04d",time)  '_np' num2str(i-1) '.bin'],'r');
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('fopen')" style="font-weight:bold">fopen</a>
First input must be a file name or a file identifier.
} 
help fopen
 <strong>fopen</strong>  Open file.
    FID = <strong>fopen</strong>(FILENAME) opens the file FILENAME for read access. FILENAME is the
    name of the file to be opened.
 
    FILENAME can be a MATLABPATH relative partial pathname. If the file is not found
    in the current working directory, <strong>fopen</strong> searches for it on the MATLAB search
    path. On UNIX systems, FILENAME may also start with a "~/" or a "~username/",
    which <strong>fopen</strong> expands to the current user's home directory or the specified user's
    home directory, respectively.
 
    FID = <strong>fopen</strong>(URL) opens the file at a remote location specified via the URL
    (uniform resource locator) for read access. The URL must be specified as a
    full path. For example, to read a binary file from Amazon S3 cloud specify the
    full URL for the file:
        <a href="matlab:web s3://bucketname/path_to_file/example.bin">s3://bucketname/path_to_file/example.bin</a>
    For more information on accessing remote data, see "Work with Remote Data"
    in the documentation.
 
    FID is a scalar MATLAB integer valued double, called a file identifier. You use
    FID as the first argument to other file input/output routines, such as FREAD and
    FCLOSE. If <strong>fopen</strong> cannot open the file, it returns -1.
 
    FID = <strong>fopen</strong>(FILENAME,PERMISSION) opens the file FILENAME in the mode specified by
    PERMISSION:
    
        'r'     open file for reading
        'w'     open file for writing; discard existing contents
        'a'     open or create file for writing; append data to end of file
        'r+'    open (do not create) file for reading and writing
        'w+'    open or create file for reading and writing; discard existing
                contents
        'a+'    open or create file for reading and writing; append data to end of
                file             
        'W'     open file for writing without automatic flushing
        'A'     open file for appending without automatic flushing
    
    FILENAME can be a MATLABPATH relative partial pathname only if the file is opened
    for reading.
 
    You can open files in binary mode (the default) or in text mode. In binary mode,
    no characters get singled out for special treatment. In text mode on the PC, the
    carriage return character preceding a newline character is deleted on input and
    added before the newline character on output. To open a file in text mode,
    append 't' to the permission specifier, for example 'rt' and 'w+t'. (On Unix, text and
    binary mode are the same, so this has no effect. On PC systems this is
    critical.)
 
    If the file is opened in update mode ('+'), you must use an FSEEK or FREWIND
    between an input command like FREAD, FSCANF, FGETS, or FGETL and an output
    command like FWRITE or FPRINTF. You must also use an FSEEK or FREWIND between an
    output command and an input command.
 
    Two file identifiers are automatically available and need not be opened. They
    are FID=1 (standard output) and FID=2 (standard error).
    
    [FID, MESSAGE] = <strong>fopen</strong>(FILENAME,...) returns a system dependent error message if
    the open is not successful.
 
    [FID, MESSAGE] = <strong>fopen</strong>(FILENAME,PERMISSION,MACHINEFORMAT) opens the specified
    file with the specified PERMISSION and treats data read using FREAD or data
    written using FWRITE as having a format given by MACHINEFORMAT. MACHINEFORMAT is
    one of the following:
 
    'native'      or 'n' - local machine format - the default
    'ieee-le'     or 'l' - IEEE floating point with little-endian byte ordering
    'ieee-be'     or 'b' - IEEE floating point with big-endian byte ordering
    'ieee-le.l64' or 'a' - IEEE floating point with little-endian byte ordering and
                           64 bit long data type
    'ieee-be.l64' or 's' - IEEE floating point with big-endian byte ordering and 64
                           bit long data type.
    
    [FID, MESSAGE] = <strong>fopen</strong>(FILENAME,PERMISSION,MACHINEFORMAT,ENCODING)
    opens the specified file using the specified PERMISSION and
    MACHINEFORMAT. ENCODING specifies the name of a character encoding
    scheme associated with the file. It must be the empty character vector
    (''), empty string (""), or a name, or alias for an encoding scheme.
    Some examples are 'UTF-8', 'latin1', 'US-ASCII', and 'Shift_JIS'. For
    common names and aliases, see the Web site
    <a href="matlab:web http://www.iana.org/assignments/character-sets">http://www.iana.org/assignments/character-sets</a>. If ENCODING is
    unspecified, or is the empty character vector (''), or is the empty
    string (""), MATLAB's default encoding scheme is used.
 
    [FILENAME,PERMISSION,MACHINEFORMAT,ENCODING] = <strong>fopen</strong>(FID) returns the filename,
    permission, machine format, and character encoding values used by MATLAB when it
    opened the file associated with identifier FID. MATLAB does not determine these
    output values by reading information from the opened file. For any of these
    parameters that were not specified when the file was opened, MATLAB returns its
    default value. The ENCODING is a standard character encoding scheme name that may
    not be the same as the ENCODING argument used in the call to <strong>fopen</strong> that opened
    the file. An invalid FID returns empty character vector ('') for all output arguments.
 
    FIDS = <strong>fopen</strong>('all') returns a row vector containing the file identifiers for all
    the files currently opened by the user (but not 1 or 2).
    
    The 'W' and 'A' permissions do not automatically perform a flush of the current
    output buffer after output operations.
    
    See also <a href="matlab:help fclose -displayBanner">fclose</a>, <a href="matlab:help ferror -displayBanner">ferror</a>, <a href="matlab:help fgetl -displayBanner">fgetl</a>, <a href="matlab:help fgets -displayBanner">fgets</a>, <a href="matlab:help fprintf -displayBanner">fprintf</a>, <a href="matlab:help fread -displayBanner">fread</a>, <a href="matlab:help fscanf -displayBanner">fscanf</a>, <a href="matlab:help fseek -displayBanner">fseek</a>, 
             <a href="matlab:help ftell -displayBanner">ftell</a>, <a href="matlab:help fwrite -displayBanner">fwrite</a>.

    <a href="matlab:doc fopen">Documentation for fopen</a>
    <a href="matlab:matlab.internal.language.introspective.overloads.displayOverloads('fopen')">Other uses of fopen</a>

str = filename + sprintf("%04d",time) + '_np' +num2str(i-1) +'.bin'

str = 

    "./run020824/time0000_np0.bin"

if system_dependent('IsDebugMode')==1, dbquit all; end
digaso_data_analysis
ne max
    2.3026

E max

ans =

   8.2790e+06

[Warning: A callback recursively calls CLOSE.  Use DELETE to prevent this message.] 
[> In close
In close
In close
In close
In close] 
digaso_data_analysis
ne max
   10.0000

E max

ans =

   8.2790e+06

[Warning: A callback recursively calls CLOSE.  Use DELETE to prevent this message.] 
[> In close
In close
In close
In close
In close] 
[Warning: A callback recursively calls CLOSE.  Use DELETE to prevent this message.] 
[> In close
In close
In close
In close
In close] 
digaso_data_analysis
ne max
   14.9633

E max

ans =

   8.2789e+06

[Warning: A callback recursively calls CLOSE.  Use DELETE to prevent this message.] 
[> In close
In close
In close
In close
In close] 
[Warning: A callback recursively calls CLOSE.  Use DELETE to prevent this message.] 
[> In close
In close
In close
In close
In close] 
digaso_data_analysis
ne max
   2.2009e+06

E max

ans =

   8.2324e+06

[Warning: A callback recursively calls CLOSE.  Use DELETE to prevent this message.] 
[> In close
In close
In close
In close
In close] 
[Warning: A callback recursively calls CLOSE.  Use DELETE to prevent this message.] 
[> In close
In close
In close
In close
In close] 
digaso_data_analysis
ne max
   2.2009e+06

E max

ans =

   8.2324e+06

[Warning: A callback recursively calls CLOSE.  Use DELETE to prevent this message.] 
[> In close
In close
In close
In close
In close] 
[Warning: A callback recursively calls CLOSE.  Use DELETE to prevent this message.] 
[> In close
In close
In close
In close
In close] 
digaso_data_analysis
ne max
   3.0064e+06

E max

ans =

   8.2452e+06

[Warning: A callback recursively calls CLOSE.  Use DELETE to prevent this message.] 
[> In close
In close
In close
In close
In close] 
[Warning: A callback recursively calls CLOSE.  Use DELETE to prevent this message.] 
[> In close
In close
In close
In close
In close] 
digaso_data_analysis
ne max
   4.0226e+06

E max

ans =

   8.2730e+06

[Warning: A callback recursively calls CLOSE.  Use DELETE to prevent this message.] 
[> In close
In close
In close
In close
In close] 
[Warning: A callback recursively calls CLOSE.  Use DELETE to prevent this message.] 
[> In close
In close
In close
In close
In close] 
digaso_data_analysis
ne max
   4.0226e+06

E max

ans =

   8.2730e+06

[Warning: A callback recursively calls CLOSE.  Use DELETE to prevent this message.] 
[> In close
In close
In close
In close
In close] 
[Warning: A callback recursively calls CLOSE.  Use DELETE to prevent this message.] 
[> In close
In close
In close
In close
In close] 
